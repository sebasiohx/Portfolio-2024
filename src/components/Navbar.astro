---
import ButtonMain from './ButtonMain.astro';

/** Menu items */
const textLinks: { label: string; href: string }[] = [
  { label: 'Home', href: '/' },
  { label: 'Portafolio', href: '/portfolio/' },
  { label: 'Acerca de mi', href: '/about/' },
];

/** Menu icons */
const iconsLinks: { label: string; href: string; icon: string }[] = [
  { label: 'GitHub', href: 'https://github.com/me', icon: 'github-logo' },
	{ label: 'CodePen', href: 'https://codepen.io/me', icon: 'codepen-logo' },
];
---

<script>
  const switchTheme: any = document.getElementById('btn-theme');
  const textSwitchTheme: any = document.querySelector('.btn-theme__text');
  const iconSwitchTheme: any = document.querySelector('.btn-theme__icon');

	/** funcion para cambiar el contenido del boton de theme */
  function toggleContentBtnTheme(theme: string) {
    textSwitchTheme.innerText = theme === 'dark' ? 'Dark' : 'Light';

    if (theme === 'dark') {
      iconSwitchTheme.classList.remove('fa-sun-o');
      iconSwitchTheme.classList.add('fa-moon-o');
    } else {
      iconSwitchTheme.classList.remove('fa-moon-o');
      iconSwitchTheme.classList.add('fa-sun-o');
    }
  }

  /** funcion para el boton de cambiar theme */
  function toggleTheme() {
    const currentTheme = document.documentElement.getAttribute('data-theme');
    const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
    document.documentElement.setAttribute('data-theme', newTheme);
    localStorage.setItem('theme', newTheme);
    toggleContentBtnTheme(newTheme);
  }

  switchTheme.addEventListener('click', toggleTheme);

  /** funcion para guardar y cargar el tema en el local storage */
  function loadTheme() {
    const savedTheme = localStorage.getItem('theme') || 'dark';
    document.documentElement.setAttribute('data-theme', savedTheme);
    toggleContentBtnTheme(savedTheme);
  }

  loadTheme();
</script>

<nav class="nav flex md:gap-3 lg:gap-6">
  <ul class="nav-items flex md:gap-3 lg:gap-6">
  {
    textLinks.map(({label, href})=>(
      <li class="nav-items__item">
        <ButtonMain 
          type="anchor"
          href={href}
          isActive={Astro.url.pathname === href || (href !== '/' && Astro.url.pathname.startsWith(href))}
        >
          {label}
        </ButtonMain>
      </li>
    ))
  }
  </ul>

  <button id='btn-theme' class='boton boton--menu'>
    <span class='btn-theme__text'></span>
    <i class='btn-theme__icon boton__icono fa' aria-hidden='true'></i>
  </button>
</nav>

<!-- <aside id="menu">
  <div class="menu__cierre">
    <img src="img/close.png" alt="cerrar menu" class="menu__cierre-img" />
  </div>
  <nav class="menu__container">
    <a href="index.html" class="menu__link" data-menu-icono="0"> Home </a>
    <a href="portafolio.html" class="menu__link" data-menu-icono="1">
      Portafolio
    </a>
    <a
      href="https://codepen.io/Solate"
      class="menu__link"
      target="_blank"
      rel="noopener noreferrer"
      data-menu-icono="2"
    >
      Experimentos
    </a>
    <a href="acerca-de-mi.html" class="menu__link" data-menu-icono="3">
      Acerca de mi
    </a>
  </nav>
  <div class="menu__iconos">
    <i class="menu__icono menu__icono--0 fas fa-home"></i>
    <i class="menu__icono menu__icono--1 fas fa-suitcase"></i>
    <i class="menu__icono menu__icono--2 fas fa-flask"></i>
    <i class="menu__icono menu__icono--3 fas fa-running"></i>
  </div>
</aside> -->

<style lang='scss'>
  /*  :global([data-theme="light"]) {
    .boton {
      color: var(--color-text);
      outline: 1px solid var(--color-text);
    }
  } */

  .nav{
    #btn-theme{
      margin-left: 1rem;
    }
  }
</style>
